package collectionframework;

public class Node {

	int data;
	Node next;
}


import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
public class Main {
	public static void main(String []args)
	{
		Scanner sc=new Scanner(System.in);
		Linkedlist list=new Linkedlist();
		list.insert(5);
		list.insert(3);
		list.insert(12);
		list.insert(19);
		list.insert(32);
		list.insert(45);
		list.insert(1);
		list.insert(76);
		list.insert(11);
		list.insert(25);
		System.out.print("Enter the method :\n(1.fetch 2.add 3.delete 4.print)");
		String s=sc.next();
		
		if(s.equals("fetch"))
		{
			System.out.print("Enter the index:\n(between 1 to 10)");
			int n=sc.nextInt();
			list.fetch(n);
		}
		else if(s.equals("add"))
		{
			System.out.print("Enter the index:");
			int i=sc.nextInt();
			System.out.print("Enter the value:");
			int n=sc.nextInt();
			list.add(i,n);
			System.out.println("the Final list:");
			list.print();
		}
		else if(s.equals("delete"))
		{
			System.out.print("Enter the index:");
			int n=sc.nextInt();
			list.delete(n);
			System.out.println("\nThe Final list:");
			list.print();
		}
		else if(s.equals("print"))
		{
			
			System.out.print("The List:\n");
			list.print();
		}
		
	}
	
}


public class Linkedlist {

	Node head;
	public void insert(int data)
	{
		Node node= new Node();
		node.data=data;
		node.next=null;
		if(head==null)
		{
			head=node;
		}
		else 
		{
			Node n=head;
			while(n.next!=null)
			{
				n=n.next;
			}
			n.next=node;
		}
	}
	public void print()
	{
		Node node=head;
		while(node.next!=null)
		{
			System.out.println(node.data);
			node=node.next;
		}
		System.out.println(node.data);
	}
	public void fetch(int index)
	{
		Node n=head;
		for(int i=0;i<=index;i++)
		{
			if(i==index)
			{
				System.out.print("Fetched value:"+(n.data));
			}
			else
			{
				n=n.next;
			}
		}
	}
	public void addAtStart(int data)
	{
		Node node= new Node();
		node.data=data;
		node.next=null;
		node.next=head;
		head=node;
	}
	public void add(int index,int data)
	{
		Node node= new Node();
		node.data=data;
		node.next=null;
		Node n=head;
		if(index==0)
		{
			addAtStart(data);
		}
		else
		{
			for(int i=0;i<index-1;i++)
			{
				n=n.next;
			}
			node.next=n.next;
			n.next=node;
		}
	}
	public void delete(int index)
	{
		if(index==0)
		{
			head=head.next;
		}
		else
		{
			Node n=head;
			Node n1=null;
			for(int i=0;i<index-1;i++)
			{
				n=n.next;
			}
			n1=n.next;
			n.next=n1.next;
			System.out.print("The deleted element:"+n1.data);
		}
	}
	
}
